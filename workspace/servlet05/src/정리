 사용자가 웹브라우저를 통해 url을 요청
 -> Controller -> 요청에 맞게 비지니스 로직(DB와 관련있는) -> 화면연결
 				  ㄴ Command: 비지니스 로직 처리
 				  	DB관련처리 : DAO -> 로직에 맞는 메소드 호출
 				  	-> 쿼리문은 mapper 태그로 선언
 				  ㄴ 데이터를 조회하는 처리인경우 응답할 화면에
 				  데이터를 출력할 수 있도록 request에 attribute로 담아둔다.
 				  
 				  
 				  ㄴ 화면 연결
 				   : request에 저장되어있는 attribute를 el,jstl을 사용해
 				   출력만한다.
 				   
실습
요청 user.ju 요청에 대한 처리를 한다. 
1. user.ju 요청에 대한 처리를 Controller(Servlet) 를 만든다

2. 비지니스 로직: UserCommand 만든다
   -tbl_java_user 테이블에서 (admin, user1) 중 한 아이디에 대해
   이름을 조회해온다 : String
   -tbl_java_user 테이블에서 (admin, user1) 중 한 아이디에 대해
   Money를 조회해온다 : int 
   
   DB관련처리할 UserDAO 를 만든다
   -한 아이디에 대해 이름 조회 메소드 선언
   -한 아이디에 대해 Money 조회 메소드 선언
    
   쿼리문 태그를 선언할 user-mapper.xml 파일을 만든다
   만든 mapper 파일은 config.xml 에 등록한다.
   mapper 식별자인 namespace 지정
   select 태그 들을 선언한다. 조회결과 데이터타입을 resultType 으로 지정
   
   UserDAO 에 선언된 메소드를 Command 에서 호출한다.
   mapper 에 선언된 태그는 UserDAO 의 메소드에서 호출한다.
   
   응답할 화면에서 이름과 money 를 출력할 수 있도록 
   각각 request 에 attribute 로 담는다

3. 응답화면연결(user.jsp) -  Controller 에 선언한다.
   아이디: amdin
   이름: ??
   Money: ??
      
 	
 	
 	
 실습=======================
 tbl_java_product 테이블의 정보를 모두 출력하기
 
 
 	
 	
 	
 	
 	
 	
 		